#!/usr/bin/env perl

use strict;
use warnings;
use XML::LibXML::Reader;

my $reader = XML::LibXML::Reader->new(location => '../lib/people.xml')
	or die "cannot read file.xml\n";

my $node;
my $key;

while($reader->read()) {
	processNode($reader);
}

sub processNode {
	my $reader = shift;
	printf "%d %d %s %d %d\n", ($reader->depth,
		      $reader->nodeType,
		      $reader->name,
		      # $reader->isEmptyElement);
		      $reader->attributeCount(),
		      $reader->hasValue);

	# These constants are not exported by default :-(
	if($reader->nodeType() == 1) {
		$node = $reader->name();
		if($reader->hasAttributes()) {
			$key = $reader->getAttribute('key');
		}
	} elsif($reader->nodeType() == 3) {
		if($reader->hasValue()) {
			print "$node";
			if(defined($key)) {
				print " ($key)";
			}
			print '=>', $reader->value(), "\n";
		}
	} elsif($reader->nodeType() == 15) {
		$key = undef;
		$node = undef;
	}
}
