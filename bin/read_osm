#!/usr/bin/env perl

# Print towns and cities latitutes a longitudes from an OSM file
# e.g. https://download.geofabrik.de/europe-latest.osm.bz2

# TODO, print places in the towns

use strict;
use warnings;
use autodie qw(:all);

no lib '.';

my @needfull;

# Install Pre-requisites
BEGIN {
	my @modules = (
		'Locale::CA', 'Locale::US',
		'XML::LibXML::Reader'
	);

	foreach my $module(@modules) {
		eval "use $module";
		if($@) {
			push @needfull, $module;
		}
	}

	if(scalar(@needfull)) {
		my $list = join(' ', @needfull);
		print "Installing $list\n";
		system("cpan -i $list");
	}

	# FIXME
	$SIG{__WARN__} = sub {
		my $warning = shift;
		if($warning =~ /^Use of uninitialized value/) {
			die $warning;
		}
		warn $warning;
	};
}

foreach my $module(@needfull) {
	my $version;
	if($module =~ /(.+)\s(.+)$/) {
		$module = $1;
		$version = $2;
	}
	if($module =~ /.+\/(.+)/) {
		$module = $1;
	}
	eval "require $module";
	if($@) {
		die $@;
	}
	$module->import();
	# if($version && ($module::VERSION < $version)) {
		# die "$module: need $version got ", $module::VERSION;
	# }
}

binmode(STDOUT, "encoding(UTF-8)");

die "Usage: $0 filename" unless($ARGV[0]);

open(my $pin, '-|', "bzcat $ARGV[0]");
my $reader = XML::LibXML::Reader->new(FD => $pin)
	or die "cannot read file.xml\n";

my $ca = Locale::CA->new();
my $us = Locale::US->new();
my $in_node;
my $node;
my $key;
my $name;
my $is_in;
my $lat;
my $lon;
my $place;

while($reader->read()) {
	processNode($reader);
}

sub processNode {
	my $reader = shift;
	# printf "%d %d %s %d %d\n", ($reader->depth,
		      # $reader->nodeType,
		      # $reader->name,
		      # # $reader->isEmptyElement);
		      # $reader->attributeCount(),
		      # $reader->hasValue);

	# These constants are not exported by default :-(
	if($reader->nodeType() == 1) {
		$node = $reader->name();
		if($node eq 'node') {
			if($reader->hasAttributes()) {
				$lat = $reader->getAttribute('lat');
				$lon = $reader->getAttribute('lon');
				$in_node = 1;
				$name = undef;
				$is_in = undef;
			}
		} elsif($in_node) {
			if($node eq 'tag') {
				if($reader->hasAttributes()) {
					my $key = $reader->getAttribute('k');
					# print "$key\n";
					if($key eq 'name:en') {
						$name = $reader->getAttribute('v');
						# print "$name\n";
					} elsif(($key eq 'name') && !defined($name)) {
						$name = $reader->getAttribute('v');
					} elsif($key eq 'is_in') {
						$is_in = $reader->getAttribute('v');
					} elsif($key eq 'is_in:country') {
						my $country = $reader->getAttribute('v');
						if(defined($is_in) && ($is_in !~ /\Q$country\E$/)) {
							$is_in .= ", $country";
						} elsif(!defined($is_in)) {
							$is_in = $country;
						}
					} elsif($key eq 'place') {
						$place = $reader->getAttribute('v');
					}
				}
			}
		}
	} elsif($reader->nodeType() == 15) {
		if(defined($name) && defined($is_in) && defined($lat) && defined($lon) && defined($place)) {
			$is_in =~ s/,(\w)/, $1/g;
			$is_in =~ s/, United Kingdom/, UK/;
			$is_in =~ s/, UK,.+$/, UK/;
			$is_in =~ s/(England|Scotland|Wales), UK/$1/;
			$is_in =~ s/, Europe$//;
			$is_in =~ s/;\s?/, /g;
			$is_in =~ s/United States of America$/USA/;
			$is_in =~ s/United States$/USA/;
			$is_in =~ s/(\w) USA$/$1, USA/;
			my $preamble;
			my $state;
			if($is_in =~ /(.+), (.+), USA/) {
				$preamble = $1;
				$state = $2;
			} elsif($is_in =~ /^(.+), USA/) {
				$state = $1;
			}
			if($state && (length($state) > 2)) {
				if(my $code = $us->{state2code}{uc($state)}) {
					if($preamble) {
						$is_in = "$preamble, $code, USA";
					} else {
						$is_in = "$code, USA";
					}
				} else {
					die "Unknown US state $state";
				}
			} elsif(my $code = $us->{state2code}{uc($is_in)}) {
				$is_in = "$code, USA";
			} elsif($code = $ca->{province2code}{uc($is_in)}) {
				$is_in = "$code, Canada";
			} else {
				my $province;
				if($is_in =~ /(.+), (.+), Canada/) {
					$preamble = $1;
					$province = $2;
				} elsif($is_in =~ /^(.+), Canada/) {
					$province = $1;
				}
				if($province && (length($province) > 2)) {
					if(my $code = $ca->new()->{province2code}{uc($province)}) {

						if($preamble) {
							$is_in = "$preamble, $code, Canada";
						} else {
							$is_in = "$code, Canada";
						}
					} else {
						die "Unknown Canadian province $province";
					}
				}
			}
			print "$name, $is_in: $lat, $lon\n";
			$key = undef;
			$node = undef;
			$name = undef;
			$lat = undef;
			$lon = undef;
			$is_in = undef;
			$in_node = 0;
		}
	}
}
