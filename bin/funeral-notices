#!/usr/bin/env perl

use strict;
use warnings;
use Data::Dumper;
use Email::MIME;
use HTML::LinkExtractor;
use Lingua::EN::NameParse;
use LWP::Simple;
use JSON::MaybeXS;

my $file;
while(<STDIN>) {
	$file .= $_;
}
my $e = Email::MIME->new($file);
my $json = JSON->new();
my $extor = HTML::LinkExtractor->new();
my $nameparser = Lingua::EN::NameParse->new(extended_titles => 1, initials => 1);

foreach my $p ($e->subparts()) {
	next unless($p->content_type() =~ /^text\/html/);
	my $html = $p->body();
	$extor->parse(\$html);
	my @links = @{$extor->links()};
	foreach my $link(@links) {
		# print Data::Dumper->new([$link])->Dump();
		next unless($link->{'tag'} eq 'a');
		my $text = $link->{'_TEXT'};
		if($text =~ />(.+)</) {
			$text = $1;
		}
		next unless($link->{'href'} =~ /\/notice\//);
		$nameparser->parse($text);
		my %name_components = $nameparser->components();
		if(scalar(keys(%name_components))) {
			# print Data::Dumper->new([\%name_components])->Dump();
			my $first_name = $name_components{'given_name_1'} // $name_components{'initials_1'};
			my $middle_name = $name_components{'middle_name'};
			my $surname = $name_components{'surname_1'};
			# print $text, '->', "$first_name, $surname", '->', $link->{'href'}, "\n";
			my $content = get($link->{'href'});
			if($content =~ /<script\stype="application\/ld\+json">(.+)?<\/script>/m) {
				$content = decode_json($1);
				# print Data::Dumper->new([$content])->Dump();
				# TODO pasrse 'articleBody'
				my $url = $content->{'url'};
				my $date = $content->{'datePublished'};
				print '"', $first_name,
					'","',
					'","', $surname,
					'","',	# age
					'","',	# place
					'","', $date,
					'","', $url,
					'"', "\n";

			}
		} else {
			warn "Can't parse $text";
		}
		# print Data::Dumper->new([$link])->Dump();
	}
}
